//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Inżynieria Oprogramowania - Projekt
//  @ File Name : System.cpp
//  @ Date : 10.06.2023
//  @ Author : Tomasz Wnuk, Bartosz Szynkaruk, Mikołaj Hasiec
//
//

#include <iostream>
#include "System.h"

System::System(std::string nazwa) {
    this->nazwa = nazwa;
}

void System::login(Uzytkownik * uzytkownik) {
    std::cout << "---------------------------------------------------------------------------------------\n";
    std::cout << "--------------------------------------Logowanie----------------------------------------\n";
    std::cout << "---------------------------------------------------------------------------------------\n";
    std::string loginUzytkownika;
    std::string hasloUzytkownika;

    std::cout << "Login: ";
    std::cin >> loginUzytkownika;

    std::cout << "Haslo: ";
    std::cin >> hasloUzytkownika;

    for (int i = 0; i < uzytkownicy.size(); i++) {
        if (uzytkownicy[i]->getLogin() == loginUzytkownika && uzytkownicy[i]->getHaslo() == hasloUzytkownika) {
            std::cout << "Zalogowano pomyslnie!\n";
            return;
        }
    }
    std::cout << "Niepoprawny login lub haslo!\n";
    rejestracja(uzytkownik);
}

void System::rejestracja(Uzytkownik * uzytkownik) {
    std::cout << "---------------------------------------------------------------------------------------\n";
    std::cout << "-------------------------------------Rejestracja---------------------------------------\n";
    std::cout << "---------------------------------------------------------------------------------------\n";
    std::string userInput;

    std::cout << "Login: ";
    std::cin >> userInput;
    uzytkownik->setLogin(userInput);

    std::cout << "Haslo: ";
    std::cin >> userInput;
    uzytkownik->setHaslo(userInput);

    std::cout << "Imie: ";
    std::cin >> userInput;
    uzytkownik->setImie(userInput);

    std::cout << "Nazwisko: ";
    std::cin >> userInput;
    uzytkownik->setNazwisko(userInput);

    std::cout << "Email: ";
    std::cin >> userInput;
    uzytkownik->setEmail(userInput);
}

void System::dodajKurs(Kurs * kurs) {
    kursy.push_back(kurs);
}

void System::usunKurs(std::string nazwa) {
    for(int i = 0; i < kursy.size(); i++) {
        if(kursy[i]->getNazwa() == nazwa) {
            kursy.erase(kursy.begin() + i);
        }
    }
}

void System::usunUzytkownika(std::string login) {
    for(int i = 0; i < uzytkownicy.size(); i++) {
        if(uzytkownicy[i]->getLogin() == login) {
            uzytkownicy.erase(uzytkownicy.begin() + i);
        }
    }
}
/*
std::vector <Kurs*> System::getKursy() {

}
*/
void System::printUzytkownik(Uzytkownik * uzytkownik) {
    std::cout << "---------------------------------------------------------------------------------------\n";
    std::cout << "--------------------------------------Uzytkownik---------------------------------------\n";
    std::cout << "---------------------------------------------------------------------------------------\n";
    std::string ukryteHasloUzytkownika = uzytkownik->getHaslo();
    ukryteHasloUzytkownika.replace(0, ukryteHasloUzytkownika.length(), ukryteHasloUzytkownika.length(), '*');
    std::cout << "Login: " << uzytkownik->getLogin() << "\n";
    std::cout << "Haslo: " << ukryteHasloUzytkownika << "\n";
    std::cout << "Imie: " << uzytkownik->getImie() << "\n";
    std::cout << "Nazwisko: " << uzytkownik->getNazwisko() << "\n";
    std::cout << "Mail: " << uzytkownik->getEmail() << "\n";
}
