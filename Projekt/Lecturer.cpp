//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Inżynieria Oprogramowania - Projekt
//  @ File Name : Lecturer.cpp
//  @ Date : 10.06.2023
//  @ Author : Tomasz Wnuk, Bartosz Szynkaruk, Mikołaj Hasiec
//
//

// Deklaracja zależności i bibliotek
#include "Lecturer.h"

// Metoda dodająca kurs do wektora kursów
void Lecturer::addCourse(Course * course) {
    // Dodanie kursu do wektora kursów
    courses.push_back(course);
}

// Metoda usuwająca kurs z wektora kursów
void Lecturer::deleteCourse(std::string courseName) {
    // Przeszukaj wektor kursów
    for(int i = 0; i < courses.size(); i++) {
        // Jeżeli name kursu jest taka sama jak podana name
        if(courses[i]->getName() == courseName) {
            // Usuń kurs z wektora kursów
            courses.erase(courses.begin() + i);
        }
    }
}

// Akcesor rozmiaru wektora kursów
int Lecturer::getCoursesSize() {
    // Zwróć rozmiar wektora kursów
    return courses.size();
}

// Metoda zwracająca kurs o podanej nazwie
Course * Lecturer::getCourseAtIndex(int courseIndex) {
    // Zwróć kursu o podanym indeksie
    return courses[courseIndex];
}

// Metoda wyświetlająca kursy wykładowcy
void Lecturer::printCourses() {
    const std::string headerName = "Twoje Kursy";
    const int totalWidth = 90;  // Szerokość całego wyświetlanego napisu
    const int nameWidth = headerName.length();  // Szerokość nazwy kursu
    const int paddingWidth = (totalWidth - nameWidth) / 2;  // Szerokość wypełnienia

    // Wyświetl nagłówek
    std::cout << "==========================================================================================\n";
    std::cout << std::string(paddingWidth, ' ') << headerName << "\n";
    std::cout << "==========================================================================================\n";
    // Przeszukaj wektor kursów
    for(int i = 0; i < courses.size(); i++) {
        // Wyświetl nazwę kursu
        std::cout << i + 1 << ". " << courses[i]->getName() << "\n";
    }
}
